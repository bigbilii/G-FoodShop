<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.guoxin.manager.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="me.guoxin.pojo.GfsUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="BIGINT" property="status"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <association property="role" javaType="me.guoxin.pojo.GfsRole">
            <id column="r_id" jdbcType="BIGINT" property="id"/>
            <result column="r_name" jdbcType="VARCHAR" property="name"/>
            <result column="r_description" jdbcType="VARCHAR" property="description"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        u.id, u.username, u.phone, u.password, u.salt, u.creat_time,
u.last_login_time, u.status, u.role_id, u.sex, u.address, u.description, r.id as r_id, r.name as r_name, r.description as r_description
    </sql>

    <select id="selectByPhone" parameterType="String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        JOIN  gfs_role r ON u.role_id = r.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="selectById" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        JOIN  gfs_role r ON u.role_id = r.id
        WHERE u.id = #{id}
    </select>


    <insert id="insert" parameterType="me.guoxin.pojo.GfsUser">
        INSERT INTO gfs_user(id, username, phone, password, salt, creat_time, last_login_time, status, role_id, sex, address, description)
        VALUES (#{id}, #{username}, #{phone}, #{password}, #{salt}, #{creatTime}, #{lastLoginTime}, #{status}, #{role.id}, #{sex}, #{address}, #{description});
    </insert>

    <select id="getRolesByUserPhone" resultType="String">
        SELECT
        r.name
        FROM
        gfs_user u
        JOIN gfs_role r ON u.role_id = r.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="getPermissionsByUserPhone" resultType="String">
        SELECT
        p.name
        FROM
        gfs_user u
        JOIN gfs_role r ON u.role_id = r.id
        JOIN gfs_role_perm rp ON rp.role_id = u.role_id
        JOIN gfs_perm p ON rp.perm_id = p.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="listUsers" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        LEFT JOIN  gfs_role r ON u.role_id = r.id
        ORDER BY u.id
    </select>

    <delete id="deleteUser" parameterType="java.util.List">
        delete from gfs_user where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <update id="updateUser" parameterType="me.guoxin.pojo.GfsUser">
        update gfs_user set username = #{username}, phone = #{phone}, password = #{password}, salt = #{salt}, creat_time = #{creatTime}, last_login_time = #{lastLoginTime}, status = #{status}, role_id = #{role.id}, sex = #{sex}, address = #{address}, description = #{description} where id = #{id}
    </update>



</mapper>