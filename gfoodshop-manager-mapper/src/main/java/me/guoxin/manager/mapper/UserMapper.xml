<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.guoxin.manager.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="me.guoxin.pojo.GfsUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <association column="id" property="role" javaType="me.guoxin.pojo.GfsRole" select="me.guoxin.manager.mapper.RoleMapper.getRolesByUserId"/>
    </resultMap>

    <sql id="Base_Column_List">
        u.id, u.username, u.phone, u.password, u.salt, u.create_time,
u.last_login_time, u.status, u.role_id, u.sex, u.description
    </sql>

    <select id="selectByPhone" parameterType="String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        JOIN  gfs_role r ON u.role_id = r.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="selectById" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        JOIN  gfs_role r ON u.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectAdmin" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        JOIN  gfs_role r ON u.role_id = r.id
        WHERE role_id = 1
    </select>


    <insert id="insert" parameterType="me.guoxin.pojo.GfsUser">
        INSERT INTO gfs_user(id, username, phone, password, salt, create_time, last_login_time, status, role_id, sex, description)
        VALUES (#{id}, #{username}, #{phone}, #{password}, #{salt}, #{createTime}, #{lastLoginTime}, #{status}, #{role.id}, #{sex}, #{description});
    </insert>

    <select id="getRolesByUserPhone" resultType="String">
        SELECT
        r.name
        FROM
        gfs_user u
        JOIN gfs_role r ON u.role_id = r.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="getPermissionsByUserPhone" resultType="String">
        SELECT
        p.name
        FROM
        gfs_user u
        JOIN gfs_role r ON u.role_id = r.id
        JOIN gfs_role_perm rp ON rp.role_id = u.role_id
        JOIN gfs_perm p ON rp.perm_id = p.id
        WHERE u.phone = #{userPhone}
    </select>

    <select id="listUsers" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        gfs_user u
        LEFT JOIN  gfs_role r ON u.role_id = r.id
        <where>
            <if test="search != null and search != ''">
                u.phone LIKE CONCAT('%',#{search},'%')
                OR u.username LIKE CONCAT('%',#{search},'%')
            </if>
        </where>
    </select>

    <delete id="deleteUser" parameterType="java.util.List">
        delete from gfs_user where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <update id="updateUser" parameterType="me.guoxin.pojo.GfsUser">
        update gfs_user
        set username = #{username}, phone = #{phone}, password = #{password}, salt = #{salt}, create_time = #{createTime}, last_login_time = #{lastLoginTime}, status = #{status}, role_id = #{role.id}, sex = #{sex}, description = #{description}
        where id = #{id}
    </update>

</mapper>